"use strict";var precacheConfig=[["/index.html","67120176687cf5aaf050ba08bf20ffb5"],["/static/css/main.e7c30595.css","d80876a601c042ad1726d8dbe83402a4"],["/static/js/main.7e0bb1b1.js","054ab83886ad734ffc1cd7266725d84d"],["/static/media/AddProject.aabed352.scss","aabed3523fdfa49cba3402f5a11a2da2"],["/static/media/App.4c2a4758.scss","4c2a475872e02b3ea4ca1cd1b0b1f403"],["/static/media/FilterButton.cc44b9ed.scss","cc44b9ed168d7c51928694749de20f4d"],["/static/media/FontColors.7f2a0f83.scss","7f2a0f837bb6655587088b83b32c5bb2"],["/static/media/HeaderHome.087b6a94.scss","087b6a94cb5facc38098ae66ef65bb75"],["/static/media/HeaderProject.78110ff9.scss","78110ff9b7e150ce5f0c1f60ebd75056"],["/static/media/Login.12b9dc6a.scss","12b9dc6a4a8570186534a52eeb85e826"],["/static/media/NotVerified.4c440c75.scss","4c440c75d17d440b7ac1363d6ec1c773"],["/static/media/ProgressBar.0e03fea1.scss","0e03fea18af8c0925bfeae16038594e0"],["/static/media/ProjectSuggestion.d4cf3c1e.scss","d4cf3c1e7d39117ec1ed96f51ad843c6"],["/static/media/ProjectSuggestionThumbnail.ddd4f594.scss","ddd4f594b5e8ecd389db675a113d3fb2"],["/static/media/ProjectsList.15090aee.scss","15090aee8313429db71dedd4ab428c73"],["/static/media/SearchBox.c1a26b43.scss","c1a26b43d0af612320294d6fb7aa8a0e"],["/static/media/SettingsPage.51c8c364.scss","51c8c36413573c361e1f81a93a2975c1"],["/static/media/Verified.2eeef7c4.scss","2eeef7c4d300207f97a21cc297f1d90e"],["/static/media/icon-github.0a3a0978.svg","0a3a0978834655eadc804efda1d3a443"],["/static/media/icon-linkedin.21c9ad17.svg","21c9ad1783e33779c4e87117f634a512"],["/static/media/index.7b1c3c76.scss","7b1c3c76f436b0ca1706140cb8a2201c"],["/static/media/ironhack-logo.d9d87c92.png","d9d87c92df220b6bf1d6ba1b533adc07"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,c){var s=new URL(e);return c&&s.pathname.match(c)||(s.search+=(s.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),s.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],c=new URL(t,self.location),s=createCacheKey(c,hashParamName,a,/\.\w{8}\./);return[c.toString(),s]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(c){return setOfCachedUrls(c).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return c.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),c="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,c),e=urlsToCacheKeys.has(a));var s="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(s,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});